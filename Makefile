#############################################################################
# Makefile for building: CPPiano
# Generated by qmake (2.01a) (Qt 4.8.2) on: Fri Oct 10 14:24:19 2014
# Project:  CPPiano.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile CPPiano.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++ -std=c++11
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I/usr/include/QtMultimediaKit/ -I/usr/include/QtMobility/
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lQtGui -lQtCore -lpthread -lQtMultimediaKit 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = audiooutputstreamer.cpp \
		key.cpp \
		keyboard.cpp \
		main.cpp \
		mainWindow.cpp moc_audiooutputstreamer.cpp \
		moc_key.cpp \
		moc_keyboard.cpp \
		moc_mainWindow.cpp
OBJECTS       = audiooutputstreamer.o \
		key.o \
		keyboard.o \
		main.o \
		mainWindow.o \
		moc_audiooutputstreamer.o \
		moc_key.o \
		moc_keyboard.o \
		moc_mainWindow.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		CPPiano.pro
QMAKE_TARGET  = CPPiano
DESTDIR       = 
TARGET        = CPPiano

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: CPPiano.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile CPPiano.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile CPPiano.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/CPPiano1.0.0 || $(MKDIR) .tmp/CPPiano1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/CPPiano1.0.0/ && $(COPY_FILE) --parents audiooutputstreamer.hpp key.hpp keyboard.hpp mainWindow.hpp .tmp/CPPiano1.0.0/ && $(COPY_FILE) --parents audiooutputstreamer.cpp key.cpp keyboard.cpp main.cpp mainWindow.cpp .tmp/CPPiano1.0.0/ && (cd `dirname .tmp/CPPiano1.0.0` && $(TAR) CPPiano1.0.0.tar CPPiano1.0.0 && $(COMPRESS) CPPiano1.0.0.tar) && $(MOVE) `dirname .tmp/CPPiano1.0.0`/CPPiano1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/CPPiano1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_audiooutputstreamer.cpp moc_key.cpp moc_keyboard.cpp moc_mainWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_audiooutputstreamer.cpp moc_key.cpp moc_keyboard.cpp moc_mainWindow.cpp
moc_audiooutputstreamer.cpp: audiooutputstreamer.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) audiooutputstreamer.hpp -o moc_audiooutputstreamer.cpp

moc_key.cpp: audiooutputstreamer.hpp \
		key.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) key.hpp -o moc_key.cpp

moc_keyboard.cpp: key.hpp \
		audiooutputstreamer.hpp \
		keyboard.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) keyboard.hpp -o moc_keyboard.cpp

moc_mainWindow.cpp: mainWindow.hpp
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainWindow.hpp -o moc_mainWindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

audiooutputstreamer.o: audiooutputstreamer.cpp audiooutputstreamer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o audiooutputstreamer.o audiooutputstreamer.cpp

key.o: key.cpp key.hpp \
		audiooutputstreamer.hpp \
		keyboard.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o key.o key.cpp

keyboard.o: keyboard.cpp key.hpp \
		audiooutputstreamer.hpp \
		keyboard.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboard.o keyboard.cpp

main.o: main.cpp mainWindow.hpp \
		keyboard.hpp \
		key.hpp \
		audiooutputstreamer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainWindow.o: mainWindow.cpp mainWindow.hpp \
		keyboard.hpp \
		key.hpp \
		audiooutputstreamer.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainWindow.o mainWindow.cpp

moc_audiooutputstreamer.o: moc_audiooutputstreamer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_audiooutputstreamer.o moc_audiooutputstreamer.cpp

moc_key.o: moc_key.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_key.o moc_key.cpp

moc_keyboard.o: moc_keyboard.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboard.o moc_keyboard.cpp

moc_mainWindow.o: moc_mainWindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainWindow.o moc_mainWindow.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

